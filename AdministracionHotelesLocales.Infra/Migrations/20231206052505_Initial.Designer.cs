// <auto-generated />
using System;
using AdministracionHotelesLocales.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdministracionHotelesLocales.Infra.Migrations
{
    [DbContext(typeof(AdministracionHotelesLocalesContext))]
    [Migration("20231206052505_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AdministracionHotelesLocales")
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Agencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agencias", "AdministracionHotelesLocales");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.AgenciaHotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgenciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaId");

                    b.HasIndex("HotelId");

                    b.ToTable("AgenciasHoteles", "AdministracionHotelesLocales");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.ContactoEmergencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId")
                        .IsUnique();

                    b.ToTable("ContactosEmergencia", "AdministracionHotelesLocales");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Habitacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Impuestos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Habitaciones", "AdministracionHotelesLocales");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<int>("Estrellas")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hoteles", "AdministracionHotelesLocales");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Huesped", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("Huespedes", "AdministracionHotelesLocales");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactoEmergenciaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HabitacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ViajeroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("ViajeroId");

                    b.ToTable("Reservas", "AdministracionHotelesLocales");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Viajero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Viajeros", "AdministracionHotelesLocales");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.AgenciaHotel", b =>
                {
                    b.HasOne("AdministracionHotelesLocales.Domain.Entities.Agencia", "Agencia")
                        .WithMany("HotelesPreferidos")
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdministracionHotelesLocales.Domain.Entities.Hotel", "Hotel")
                        .WithMany("AgenciasHoteles")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.ContactoEmergencia", b =>
                {
                    b.HasOne("AdministracionHotelesLocales.Domain.Entities.Reserva", "Reserva")
                        .WithOne("ContactoEmergencia")
                        .HasForeignKey("AdministracionHotelesLocales.Domain.Entities.ContactoEmergencia", "ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Habitacion", b =>
                {
                    b.HasOne("AdministracionHotelesLocales.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Habitaciones")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Huesped", b =>
                {
                    b.HasOne("AdministracionHotelesLocales.Domain.Entities.Reserva", "Reserva")
                        .WithMany("Huespedes")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("AdministracionHotelesLocales.Domain.Entities.Habitacion", "Habitacion")
                        .WithMany("Reservas")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdministracionHotelesLocales.Domain.Entities.Viajero", "Viajero")
                        .WithMany("Reservas")
                        .HasForeignKey("ViajeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitacion");

                    b.Navigation("Viajero");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Agencia", b =>
                {
                    b.Navigation("HotelesPreferidos");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Habitacion", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("AgenciasHoteles");

                    b.Navigation("Habitaciones");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Reserva", b =>
                {
                    b.Navigation("ContactoEmergencia")
                        .IsRequired();

                    b.Navigation("Huespedes");
                });

            modelBuilder.Entity("AdministracionHotelesLocales.Domain.Entities.Viajero", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
